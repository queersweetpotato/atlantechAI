from http.server import HTTPServer, BaseHTTPRequestHandler
from urllib.parse import urlparse, parse_qs
import heartFailureLoad as nn

def content(query):
    res = nn.predict([[float(x) for x in query.get("p")[0].split(",")]])
    return res

# HTTP Server, responding to GET requests with content generated by the 'content' function
class CloudHTTPRequestHandler(BaseHTTPRequestHandler):

    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        queryString = parse_qs(urlparse(self.path).query)
        self.wfile.write(str(content(queryString)).encode())

if __name__=="__main__":
    httpd = HTTPServer(('0.0.0.0', 8080), CloudHTTPRequestHandler)
    httpd.serve_forever()
